***
Task3:

Number of strategies must be odd, but I'm too lazy and it's 3 am...
So odd not even(not 6), If you really going to write code

 +-------------+------+-------+----------+------+------+------+
 | v PC\User > | Rock | Paper | 3rd move | 4th  | 5th  | 6th  |
 +-------------+------+-------+----------+------+------+------+
 | Rock        | Draw | Win   | Win      | Lose | Lose | Lose |
 +-------------+------+-------+----------+------+------+------+
 | Paper       | Lose | Draw  | Win      | Win  | Lose | Lose |
 +-------------+------+-------+----------+------+------+------+
 | 3rd move    | Lose | Lose  | Draw     | Win  | Win  | Lose |
 +-------------+------+-------+----------+------+------+------+
 | 4th         | Win  | Lose  | Lose     | Draw | Win  | Win  |
 +-------------+------+-------+----------+------+------+------+
 | 5th         | Win  | Win   | Lose     | Lose | Draw | Win  |
 +-------------+------+-------+----------+------+------+------+
 | 6th         | Win  | Win   | Win      | Lose | Lose | Draw |
 +-------------+------+-------+----------+------+------+------+

for number of strategies - 6 
1 - 6 = win  -5  2 - 6 = -4 win
1 - 5 = win  -4  2 - 5 = -3 win
1 - 4 = win  -3  2 - 4 = -2 lose
1 - 3 = lose -2  2 - 3 = -1 lose
1 - 2 = lose -1  2 - 2 =  0 draw
1 - 1 = draw  0  2 - 1 =  1 win

6 - 1 = lose 5
6 - 2 = lose 4
6 - 3 = lose 3
6 - 4 = win  2
6 - 5 = win  1
6 - 6 = draw 0


half_circle_distance = int((len(strats) / 2) + 1)
diff = abs(move1 - move2)

2 - 3
if diff = 0:
   draw
if diff < half_circle_distance:
   if move1 < move2:
      move1 = lost
      move2 = won
   else:
      move1 = won
      move2 = lost
if diff >= half_circle_distance:
   if move1 < move2:
      move1 = won 
      move2 = lost
   else:
      move1 = lost
      move2 = won

Rock Paper Scissors = 3 strats
half_circle_distance = 2

Rock - Scissors = 1 - 3 > diff = 2 > Won | Lost
Scissors - Paper = 3 - 2 > diff = 1 > Won | Lost
Scissors - Rock = 3 - 1 ? diff = 2 > Lost | Won
